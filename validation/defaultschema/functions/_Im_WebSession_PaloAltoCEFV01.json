{"_Im_WebSession_PaloAltoCEFV01": {"body": "let parser=(\r\n  starttime:datetime=datetime(null), \r\n  endtime:datetime=datetime(null),\r\n  srcipaddr_has_any_prefix:dynamic=dynamic([]),\r\n  dstipaddr_has_any_prefix:dynamic=dynamic([]),\r\n  ipaddr_has_any_prefix:dynamic=dynamic([]), \r\n  url_has_any:dynamic=dynamic([]),\r\n  httpuseragent_has_any:dynamic=dynamic([]),\r\n  eventresultdetails_in:dynamic=dynamic([]),\r\n  eventresult:string='*',\r\n  disabled:bool=false\r\n)\r\n{\r\n    let src_or_any=set_union(srcipaddr_has_any_prefix, ipaddr_has_any_prefix); \r\n    let dst_or_any=set_union(dstipaddr_has_any_prefix, ipaddr_has_any_prefix);\r\n    let ip_any = set_union(srcipaddr_has_any_prefix, dstipaddr_has_any_prefix, ipaddr_has_any_prefix); \r\n    let EventLookup=datatable(DeviceAction:string, DvcAction:string,EventResult:string,HttpStatusCode:string)\r\n    [\r\n      \"alert\", \"Allow\", \"Success\",\"200\",\r\n      \"allow\", \"Allow\", \"Success\", \"200\",\r\n      \"continue\", \"Allow\", \"Success\", \"200\",\r\n      \"override\", \"Allow\", \"Success\", \"200\",\r\n      \"block-continue\", \"Allow\", \"Partial\", \"200\",\r\n      \"block-url\", \"Deny\", \"Failure\", \"503\",\r\n      \"block-override\", \"Deny\", \"Failure\", \"302\",\r\n      \"override-lockout\", \"Deny\", \"Failure\",\"503\",\r\n      \"reset client\", \"Reset Source\", \"Failure\", \"503\",\r\n      \"reset server\", \"Reset Destination\", \"Failure\", \"503\",\r\n      \"reset both\", \"Reset\", \"Failure\", \"503\",\r\n      \"deny\", \"Deny\", \"Failure\", \"503\",\r\n      \"drop\", \"Drop\", \"Failure\", \"503\",\r\n      \"drop ICMP\", \"Drop ICMP\", \"Failure\", \"503\"\r\n    ];\r\n    let SeverityLookup=datatable(LogSeverity:string,EventSeverity:string)\r\n    [   \r\n      1, \"Informational\", \r\n      2, \"Low\",\r\n      3, \"Medium\",\r\n      4, \"Medium\", \r\n      5, \"High\"\r\n    ];\r\n    let remove_protocol_from_list = (list:dynamic)\r\n    {\r\n      print list\r\n      | mv-apply l = print_0 to typeof(string) on\r\n      ( extend l = replace_regex (tostring(l), \"^(?i:.*?)://\", \"\") )\r\n      | project l\r\n    };\r\n    CommonSecurityLog\r\n    | where not(disabled)\r\n    | where (isnull(starttime) or TimeGenerated >= starttime)\r\n      and (isnull(endtime) or TimeGenerated <= endtime)\r\n    | where DeviceVendor == \"Palo Alto Networks\"\r\n      and DeviceProduct == \"PAN-OS\"\r\n      and Activity == \"THREAT\"\r\n      and DeviceEventClassID == \"url\"\r\n    | where (array_length(url_has_any) == 0 or RequestURL has_any (remove_protocol_from_list(url_has_any)))\r\n    | extend temp_SrcMatch = has_any_ipv4_prefix(SourceIP,src_or_any),\r\n      temp_DstMatch = has_any_ipv4_prefix(DestinationIP,dst_or_any)\r\n    | extend ASimMatchingIpAddr = case(\r\n      array_length(src_or_any) == 0 and array_length(dst_or_any) == 0, \"-\",\r\n      temp_SrcMatch and temp_DstMatch, \"Both\",\r\n      temp_SrcMatch, \"SrcIpAddr\",\r\n      temp_DstMatch, \"DstIpAddr\",\r\n      \"No match\")\r\n    | where ASimMatchingIpAddr != \"No match\" \r\n    | project-away temp_*\r\n    | extend EventResultDetails     = \"NA\"\r\n    | where (array_length(eventresultdetails_in) == 0 or tostring(EventResultDetails) has_any(eventresultdetails_in))\r\n    | lookup EventLookup on DeviceAction\r\n    | where (eventresult == '*' or EventResult =~ eventresult)\r\n    | lookup SeverityLookup on LogSeverity\r\n    | parse-kv AdditionalExtensions as (\r\n        PanOSXForwarderfor:string,\r\n        PanXFFIP:string,\r\n        PanOSReferer:string,\r\n        PanOSRuleUUID:string,\r\n        PanSrcHostname:string,\r\n        PanSrcMac:string,\r\n        PanSrcDeviceCat:string,\r\n        PanSrcDAG:string,\r\n        PanOSSrcUUID:string,\r\n        PanSrcDeviceProf:string,\r\n        PanSrcDeviceModel:string,\r\n        PanSrcDeviceVendor:string,\r\n        PanSrcDeviceOS:string,\r\n        PanSrcDeviceOSv:string,\r\n        PanDstHostname:string,\r\n        PanDstMac:string,\r\n        PanDstDeviceCat:string,\r\n        PanDstDAG:string,\r\n        PanOSDstUUID:string,\r\n        PanDstDeviceProf:string,\r\n        PanDstDeviceModel:string,\r\n        PanDstDeviceVendor:string,\r\n        PanDstDeviceOS:string,\r\n        PanDstDeviceOSv:string\r\n      ) with (pair_delimiter=';', kv_delimiter='=')\r\n    | extend \r\n      HttpRequestXff            = coalesce(PanOSXForwarderfor, PanXFFIP)\r\n    | project-rename \r\n      DvcHostname                = Computer,\r\n      HttpReferrer              = PanOSReferer,\r\n      DstMacAddr                = PanDstMac,\r\n      SrcMacAddr                = PanSrcMac,\r\n      DstHostname               = PanDstHostname,\r\n      SrcHostname               = PanSrcHostname,\r\n      DvcId                     = DeviceExternalID,\r\n      SrcZone                   = DeviceCustomString4,\r\n      DstZone                   = DeviceCustomString5,\r\n      UrlCategory               = DeviceCustomString2,\r\n      DvcOriginalAction         = DeviceAction,\r\n      EventUid                  = _ItemId,\r\n      EventOriginalSeverity     = LogSeverity,\r\n      EventProductVersion       = DeviceVersion,\r\n      DvcInboundInterface       = DeviceInboundInterface,\r\n      DvcOutboundInterface      = DeviceOutboundInterface,\r\n      DstIpAddr                 = DestinationIP,\r\n      DstPortNumber             = DestinationPort,\r\n      SrcIpAddr                 = SourceIP,\r\n      SrcPortNumber             = SourcePort,\r\n      SrcUsername               = SourceUserName,\r\n      DstUsername               = DestinationUserName,\r\n      NetworkRuleName           = DeviceCustomString1,\r\n      ThreatOriginalConfidence  = ThreatConfidence,\r\n      DstNatIpAddr              = DestinationTranslatedAddress,\r\n      DstNatPortNumber          = DestinationTranslatedPort,\r\n      SrcNatIpAddr              = SourceTranslatedAddress,\r\n      SrcNatPortNumber          = SourceTranslatedPort\r\n    | extend\r\n      Dvc                       = DvcHostname,\r\n      DvcIdType                 = \"Other\",\r\n      EventType                 = \"HTTPsession\",\r\n      EventSchema               = \"WebSession\",\r\n      EventSchemaVersion        = \"0.2.5\",\r\n      EventProduct              = \"Palo Alto\",\r\n      EventVendor               = \"PanOS\",\r\n      EventStartTime            = TimeGenerated,\r\n      EventEndTime              = TimeGenerated,\r\n      HttpRequestMethod         = toupper(RequestMethod),\r\n      HttpContentFormat         = RequestContext,\r\n      DstDomainType             = \"FQDN\",\r\n      Src                       = SrcIpAddr,\r\n      SrcUsernameType           = case(isempty(SrcUsername), \"\", \r\n        \"Windows\"),\r\n      DstUsernameType           = case(isempty(DstUsername), \"\", \r\n        \"Windows\"),\r\n      NetworkProtocolVersion    = case(\r\n        DstIpAddr contains \".\"  , \"IPv4\",\r\n        DstIpAddr contains \":\"  , \"IPv6\",\r\n        \"\"),\r\n      NetworkDirection          = case(\r\n        FlexString2 == \"client-to-server\", \"Outbound\",\r\n        FlexString2 == \"server-to-client\", \"Inbound\",\r\n        \"\"),\r\n      IpAddr                    = SrcIpAddr,\r\n      NetworkProtocol           = toupper(Protocol),\r\n      User                      = SrcUsername,\r\n      Rule                      = NetworkRuleName,\r\n      NetworkSessionId          = tostring(DeviceCustomNumber1),\r\n      DvcInterface              = DvcInboundInterface,\r\n      Hostname                  = DstHostname,\r\n      Url                       = trim('\"', RequestURL)\r\n    | extend\r\n      DstFQDN                   = iif(Url contains \":\", split(Url, \":\")[0], split(Url, \"/\")[0]),\r\n      SessionId                 = NetworkSessionId,\r\n      ThreatField               = case(\r\n        isnotempty(ThreatOriginalConfidence) and NetworkDirection == \"Outbound\", \"SrcIpAddr\",\r\n        isnotempty(ThreatOriginalConfidence) and NetworkDirection == \"Inbound\", \"DstIpAddr\",\r\n        \"\")\r\n    | extend \r\n      ThreatIpAddr                = case(\r\n        ThreatField == \"SrcIpAddr\", SrcIpAddr,\r\n        ThreatField == \"DstIpAddr\", DstIpAddr,\r\n        \"\"),\r\n      Dst                       = DstFQDN\r\n    | project ASimMatchingIpAddr, DeviceVendor, Dst, DstDomainType, DstFQDN, DstHostname, DstIpAddr, DstMacAddr, DstNatIpAddr, DstNatPortNumber, DstPortNumber, DstUsername, DstUsernameType, DstZone, Dvc, DvcAction, DvcHostname, DvcId, DvcIdType, DvcInboundInterface, DvcInterface, DvcOriginalAction, DvcOutboundInterface, EventCount, EventEndTime, EventOriginalSeverity, EventProduct, EventProductVersion, EventResult, EventResultDetails, EventSchema, EventSchemaVersion, EventSeverity, EventStartTime, EventType, EventUid, EventVendor, Hostname, HttpContentFormat, HttpRequestMethod, HttpRequestXff, HttpStatusCode, IpAddr, NetworkDirection, NetworkProtocol, NetworkProtocolVersion, NetworkRuleName, NetworkSessionId, Protocol, RequestContext, Rule, SessionId, Src, SrcHostname, SrcIpAddr, SrcMacAddr, SrcNatIpAddr, SrcNatPortNumber, SrcPortNumber, SrcUsername, SrcUsernameType, SrcZone, ThreatField, ThreatIpAddr, ThreatOriginalConfidence, TimeGenerated, Type, Url, UrlCategory, User\r\n};\r\nparser (starttime=starttime, endtime=endtime, dstipaddr_has_any_prefix=dstipaddr_has_any_prefix, srcipaddr_has_any_prefix=srcipaddr_has_any_prefix, ipaddr_has_any_prefix=ipaddr_has_any_prefix, url_has_any=url_has_any, httpuseragent_has_any=httpuseragent_has_any, eventresultdetails_in=eventresultdetails_in, eventresult=eventresult, disabled=disabled)\r\n", "params": "starttime:datetime = datetime(null), endtime:datetime = datetime(null), srcipaddr_has_any_prefix:dynamic = dynamic([]), dstipaddr_has_any_prefix:dynamic = dynamic([]), ipaddr_has_any_prefix:dynamic = dynamic([]), url_has_any:dynamic = dynamic([]), httpuseragent_has_any:dynamic = dynamic([]), eventresultdetails_in:dynamic = dynamic([]), eventresult:string = '*', disabled:bool = false"}}