{"_ASim_Dns_CorelightZeekV03": {"body": "let DNSQuery_CorelightZeek=(disabled:bool=false){\r\n  Corelight_CL | where not(disabled)\r\n  | where log_file_s has \"dns\"\r\n  | extend data = todynamic(Message)\r\n  | extend \r\n      EventCount=int(1),\r\n      EventProduct=\"Zeek\",\r\n      EventVendor=\"Corelight\",\r\n      EventSchema = \"Dns\",\r\n      EventSchemaVersion=\"0.1.3\",\r\n      Dvc=\"Zeek\",\r\n      EventType=\"Query\",\r\n      EventSubType=iff(isnull(data.rcode),'request','response'),\r\n      EventEndTime= todatetime(data.ts),\r\n      EventOriginalUid = tostring(data.uid),\r\n      SrcIpAddr = tostring (data.[\"id.orig_h\"]),\r\n      SrcPortNumber = toint (data.[\"id.orig_p\"]),\r\n      DstIpAddr = tostring (data.[\"id.dest_h\"]),\r\n      DstPortNumber = toint (data.[\"id.dest_p\"]),\r\n      NetworkProtocol = tostring(data.proto),\r\n      TransactionIdHex = tohex(toint(data.trans_id)), \r\n      DnsQuery = tostring(data.query),\r\n      DnsResponseCode = toint(data.rcode),\r\n      EventResultDetails = tostring (data.rcode_name),\r\n      DnsFlagsAuthoritative = tobool(data.AA),\r\n      DnsFlagsTruncated = tobool(data.TC),\r\n      DnsFlagsRecursionDesired = tobool(data.RD),\r\n      DnsFlagsZ = tobool(data.Z),\r\n      DnsQueryClassName =tostring(data.qclass_name), \r\n      DnsQueryClass = toint(data.qclass),\r\n      DnsQueryTypeName =tostring(data.qtype_name), \r\n      DnsQueryType = toint(data.qtype),\r\n      DnsNetworkDuration = toint(data.rtt),\r\n      DnsResponseName = tostring(pack ('answers', data.answers, 'ttls', data.TTLs, 'authoritative ', data.auth, 'additional', data.addl))\r\n  | extend\r\n      EventStartTime = EventEndTime,\r\n      EventResult = iff (EventResultDetails=~'NOERROR','Success','Failure'),\r\n      DnsQueryClassName=case(DnsQueryClassName==\"C_INTERNET\",\"IN\",\r\n                            isempty(DnsQueryClassName) and data.answers has \".\",\"ANY\"\r\n                            ,\"\")\r\n  // Aliases\r\n  | extend \r\n      DnsResponseCodeName=EventResultDetails, \r\n      Domain=DnsQuery,\r\n      IpAddr=SrcIpAddr,\r\n      Src=SrcIpAddr,\r\n      Dst=DstIpAddr,\r\n      Duration=DnsNetworkDuration\r\n      // Backward Compatibility\r\n  | extend\r\n      Query=DnsQuery,\r\n      QueryType=DnsQueryType,\r\n      ResponseCodeName=DnsResponseCodeName,\r\n      QueryTypeName=DnsQueryTypeName\r\n  };\r\n  DNSQuery_CorelightZeek(disabled)\r\n", "params": "disabled:bool = false"}}