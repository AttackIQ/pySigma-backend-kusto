{"_Im_Dns_CiscoUmbrellaV03": {"body": "let DNSQuery_CiscoUmbrella=(\r\n  starttime:datetime=datetime(null), endtime:datetime=datetime(null)\r\n  , srcipaddr:string='*'\r\n  , domain_has_any:dynamic=dynamic([]) \r\n  , responsecodename:string='*'\r\n  , response_has_ipv4:string='*' , response_has_any_prefix:dynamic=dynamic([])\r\n  , eventtype:string='Query'\r\n  , disabled:bool=false\r\n  ){\r\n    Cisco_Umbrella_dns_CL | where not(disabled)\r\n    // ******************************************************************\r\n    //  Pre-parsing filterring:\r\n      | where\r\n      // Return empty list if response IPs are passed\r\n        (eventtype in~ ('lookup','Query'))\r\n        and (response_has_ipv4=='*')\r\n        and (array_length(response_has_any_prefix) ==0) \r\n        and (isnull(starttime) or TimeGenerated >= starttime)\r\n        and (isnull(endtime) or TimeGenerated <= endtime) \r\n        and (srcipaddr=='*' or InternalIp_s==srcipaddr)\r\n        and (array_length(domain_has_any) ==0 or Domain_s has_any (domain_has_any))\r\n        and (responsecodename=='*' or ResponseCode_s=~responsecodename)\r\n    // *****************************************************************\r\n    | parse QueryType_s with DnsQueryType:int \" (\"DnsQueryTypeName:string \")\"\r\n    //\r\n    | project \r\n    //\r\n    // ******************* Mandatory\r\n      EventCount=int(1),\r\n      EventStartTime=todatetime(column_ifexists('Timestamp_t',column_ifexists('Timestamp_s',''))),\r\n      EventProduct=\"Umbrella\",\r\n      EventVendor=\"Cisco\",\r\n      EventSchema=\"Dns\",\r\n      EventSchemaVersion=\"0.1.3\",\r\n      Dvc=\"CiscoUmbrella\" ,\r\n      EventType=\"Query\",\r\n      EventResult=iff(ResponseCode_s=~'NOERROR','Success','Failure'),\r\n      EventResultDetails=ResponseCode_s,  // => ResponseCodeNames\r\n      //\r\n      TimeGenerated, // not handled by schema, but we need to preserve it\r\n      SrcIpAddr=column_ifexists('InternalIp_s', ''),\r\n      EventSubType='response',\r\n  // ********** Renamed columns\r\n      UrlCategory=column_ifexists('Categories_s', ''),\r\n      DnsQuery=trim_end(@'\\.',column_ifexists('Domain_s', '')) , \r\n      ThreatCategory=column_ifexists('Blocked_Categories_s', ''),\r\n      SrcNatIpAddr=column_ifexists('ExternalIp_s', ''),\r\n      DvcAction=column_ifexists('Action_s', ''),\r\n      EventEndTime=todatetime(column_ifexists('Timestamp_t',  column_ifexists('Timestamp_s',\"\")  )),\r\n  //\r\n  // *************** keep Parsed data\r\n      DnsQueryType, DnsQueryTypeName\r\n  // **************Aliases\r\n  | extend \r\n      DnsResponseCodeName=EventResultDetails, \r\n      DomainCategory=UrlCategory,\r\n      Domain=DnsQuery,\r\n      IpAddr=SrcIpAddr,\r\n      Src=SrcIpAddr\r\n  };\r\nDNSQuery_CiscoUmbrella( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, disabled)\r\n", "params": "starttime:datetime = datetime(null), endtime:datetime = datetime(null), srcipaddr:string = '*', domain_has_any:dynamic = dynamic([]), responsecodename:string = '*', response_has_ipv4:string = '*', response_has_any_prefix:dynamic = dynamic([]), eventtype:string = 'Query', disabled:bool = false"}}