{"_ASim_NetworkSession_MicrosoftWindowsEventFirewallV03": {"body": "// Data tables for mapping raw values into string\r\n let LayerCodeTable = datatable (LayerCode:string,LayerName:string)[\r\n   '%%14596', 'IP Packet',\r\n   '%%14597', 'Transport',\r\n   '%%14598', 'Forward',\r\n   '%%14599', 'Stream',\r\n   '%%14600', 'Datagram Data',\r\n   '%%14601', 'ICMP Error',\r\n   '%%14602', 'MAC 802.3',\r\n   '%%14603', 'MAC Native',\r\n   '%%14604', 'vSwitch',\r\n   '%%14608', 'Resource Assignment',\r\n   '%%14609', 'Listen',\r\n   '%%14610', 'Receive/Accept',\r\n   '%%14611', 'Connect',\r\n   '%%14612', 'Flow Established',\r\n   '%%14614', 'Resource Release',\r\n   '%%14615', 'Endpoint Closure',\r\n   '%%14616', 'Connect Redirect',\r\n   '%%14617', 'Bind Redirect',\r\n   '%%14624', 'Stream Packet'];\r\n let ProtocolTable = datatable (Protocol:int, NetworkProtocol: string)[\r\n   1, 'ICMP',\r\n   3, 'GGP',\r\n   6, 'TCP',\r\n   8, 'EGP',\r\n   12, 'PUP',\r\n   17, 'UDP',\r\n   20, 'HMP',\r\n   27, 'RDP',\r\n   46, 'RSVP',\r\n   47, 'PPTP data over GRE',\r\n   50, 'ESP',\r\n   51, 'AH',\r\n   66, 'RVD',\r\n   88, 'IGMP',\r\n   89, 'OSPF'];\r\n let Directions = datatable (DirectionCode:string,NetworkDirection:string, isOutBound:bool)[\r\n   '%%14592', 'Inbound', false,\r\n   '%%14593', 'Outbound', true,\r\n   '%%14594', 'Forward',false,\r\n   '%%14595', 'Bidirectional', false,\r\n   '%%14609', 'Listen', false];\r\n ///////////////////////////////////////////////////////\r\n // this query extract data fields from EventData column from SecurityEvent table\r\n ///////////////////////////////////////////////////////\r\n let WindowsFirewall_SecurityEvent=(){ // Event IDs between (5151 .. 5159)\r\n // will be extracting Event specific fields from 'EventData' field\r\n   let SecurityEventProjected =\r\n       SecurityEvent\r\n       | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Type\r\n   ;\r\n   let SecurityEvent_5152 = \r\n       SecurityEventProjected | where not(disabled)\r\n       | where EventID==5152\r\n       | parse EventData with * '<Data Name=\"ProcessId\">'ProcessId:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Application\">'Application'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Direction\">'DirectionCode'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SrcIpAddr:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourcePort\">'SrcPortNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"DestAddress\">'DstIpAddr:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"DestPort\">'DstPortNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Protocol\">'Protocol:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'*\r\n       | project-away EventData;\r\n   let SecurityEvent_5154_5155_5158_5159 =\r\n       SecurityEventProjected | where not(disabled)\r\n       | where EventID in (5154, 5155, 5158, 5159)\r\n       | parse EventData with * '<Data Name=\"ProcessId\">'ProcessId:string'</Data>' \r\n           '\\x0d\\x0a  <Data Name=\"Application\">'Application'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SrcIpAddr:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourcePort\">'SrcPortNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Protocol\">'Protocol:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'*\r\n       | extend DirectionCode = \"%%14609\"\r\n       | project-away EventData;\r\n   let SecurityEvent_5156_5157 =\r\n       SecurityEventProjected | where not(disabled)\r\n       | where EventID in (5156, 5157)\r\n       | parse EventData with * '<Data Name=\"ProcessID\">'ProcessId:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Application\">'Application:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Direction\">'DirectionCode:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourceAddress\">'SrcIpAddr:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"SourcePort\">'SrcPortNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"DestAddress\">'DstIpAddr:string'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"DestPort\">'DstPortNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"Protocol\">'Protocol:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"FilterRTID\">'NetworkRuleNumber:int'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerName\">'LayerCode'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"LayerRTID\">'LayerRTID'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"RemoteUserID\">'RemoteUserID'</Data>'\r\n           '\\x0d\\x0a  <Data Name=\"RemoteMachineID\">'RemoteMachineID'</Data>'*\r\n       | project-away EventData;\r\n   union SecurityEvent_5152, SecurityEvent_5156_5157, SecurityEvent_5154_5155_5158_5159\r\n       | lookup Directions on DirectionCode\r\n       | project-rename DvcHostname = Computer\r\n       | extend\r\n           SrcAppName = iff(isOutBound, Application, \"\"),\r\n           DstAppName = iff(not(isOutBound), Application, \"\"),\r\n           SrcDvcId = iff(isOutBound, RemoteMachineID, \"\"),\r\n           DstDvcId = iff(not(isOutBound), RemoteMachineID, \"\"),\r\n           SrcProcessId =  iff(isOutBound, tostring(ProcessId), \"\"),\r\n           DstProcessId =  iff(not(isOutBound), tostring(ProcessId), \"\"),\r\n           DstUserId = iff(isOutBound, RemoteUserID, \"\"),\r\n           SrcUserId = iff(not(isOutBound), RemoteUserID, \"\"),\r\n           DstHostname = iff(isOutBound, \"\", DvcHostname),\r\n           SrcHostname = iff(isOutBound, DvcHostname, \"\")\r\n       | project-away Application, RemoteMachineID, RemoteUserID, ProcessId\r\n };\r\n //////////////////////////////////////////////////////\r\n // this query extract the data from WindowsEvent table\r\n //////////////////////////////////////////////////////\r\n let WindowsFirewall_WindowsEvent=(){   \r\n       WindowsEvent | where not(disabled)\r\n       | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Type\r\n       | where EventID between (5150 .. 5159)\r\n       | project-rename DvcHostname = Computer\r\n       | extend \r\n           EventSeverity=tostring(EventData.Severity),\r\n           LayerCode = tostring(EventData.LayerName),\r\n           NetworkRuleNumber = toint(EventData.FilterRTID),\r\n           Protocol = toint(EventData.Protocol),\r\n           DirectionCode = iff(EventID in (5154, 5155, 5158, 5159), \"%%14609\",tostring(EventData.Direction))\r\n       | lookup Directions on DirectionCode \r\n       | extend  SrcAppName = iff(isOutBound, tostring(EventData.Application), \"\"),\r\n                   DstAppName = iff(not(isOutBound), tostring(EventData.Application), \"\"),\r\n                   SrcIpAddr = tostring(EventData.SourceAddress),\r\n                   DstIpAddr = tostring(EventData.DestAddress),\r\n                   SrcDvcId = iff(isOutBound, tostring(EventData.RemoteMachineID), \"\"),\r\n                   DstDvcId = iff(not(isOutBound), tostring(EventData.RemoteMachineID), \"\"),\r\n                   SrcPortNumber=toint(EventData.SourcePort),\r\n                   DstPortNumber=toint(EventData.DestPort),\r\n                   SrcProcessId =  iff(isOutBound, tostring(EventData.ProcessId), \"\"),\r\n                   DstProcessId =  iff(not(isOutBound), tostring(EventData.ProcessId), \"\"),\r\n                   DstUserId = iff(isOutBound, tostring(EventData.RemoteUserID), \"\"),\r\n                   SrcUserId = iff(not(isOutBound), tostring(EventData.RemoteUserID), \"\"),\r\n                   DstHostname = iff(isOutBound, \"\", DvcHostname),\r\n                   SrcHostname = iff(isOutBound, DvcHostname, \"\")\r\n       | project-away EventData\r\n   };\r\n // Main query -> outputs both schemas as one normalized table\r\n union WindowsFirewall_SecurityEvent, WindowsFirewall_WindowsEvent \r\n      | extend \r\n             DvcAction = iff(EventID in (5154, 5156, 5158), \"Allow\", \"Deny\"),\r\n             DvcOs = 'Windows',\r\n             DstAppType = \"Process\",\r\n             DstUserIdType = \"SID\",\r\n             SrcAppType = \"Process\",\r\n             SrcUserIdType = \"SID\",\r\n             EventType = \"NetworkSession\",\r\n             EventSchema = \"NetworkSession\",\r\n             EventSchemaVersion=\"0.2.0\",\r\n             EventCount=toint(1),\r\n             EventVendor = \"Microsoft\",\r\n             EventProduct = \"Windows Firewall\",\r\n             EventResult = iff(EventID in (5154, 5156, 5158), \"Success\", \"Failure\"),\r\n             EventStartTime = TimeGenerated,\r\n             EventEndTime = TimeGenerated,\r\n             EventSeverity = iff(EventID  in (5154, 5156, 5158), \"Informational\", \"Low\"),\r\n             EventOriginalType = tostring(EventID),\r\n             DstDvcIdType = iff (DstDvcId != \"\", \"SID\", \"\"),\r\n             SrcDvcIdType = iff (SrcDvcId != \"\", \"SID\", \"\")\r\n    // aliases\r\n     | extend\r\n             Dvc = DvcHostname,\r\n             Hostname = DstHostname,\r\n             IpAddr = SrcIpAddr,\r\n             Src = SrcIpAddr,\r\n             Dst = DstIpAddr,\r\n             Rule = tostring (NetworkRuleNumber)\r\n     | lookup LayerCodeTable on LayerCode\r\n     | lookup ProtocolTable on Protocol\r\n     | project-away LayerCode, DirectionCode, Protocol, isOutBound, LayerName, EventID, LayerRTID", "params": "disabled:bool = false"}}