{"_ASim_NetworkSession_MicrosoftSysmonV01": {"body": "let parser = (disabled:bool = false) {\r\nlet Sysmon3_Event=(disabled:bool=false) {\r\n      Event\r\n      | where not(disabled)\r\n      | where Source == \"Microsoft-Windows-Sysmon\" and EventID==3\r\n      | parse-kv EventData as (\r\n                  SourceIp:string,\r\n                  DestinationIp:string,\r\n                  SourceHostname:string,\r\n                  DestinationHostname:string,\r\n                  Initiated:bool,  // Initiated indicates the process initiated a connection (meaning outbound)\r\n                  RuleName:string,\r\n                  UtcTime:datetime,\r\n                  ProcessGuid:string,\r\n                  ProcessId:string,\r\n                  Image:string,\r\n                  User:string,\r\n                  Protocol:string,\r\n                  SourceIsIpv6:bool,\r\n                  SourcePort:int,\r\n                  SourcePortName:string,\r\n                  DestinationIsIpv6:bool,\r\n                  DestinationPort:int,\r\n                  DestinationPortName:string\r\n              ) with (regex=@'<Data Name=\"(\\w+)\">{?([^>]*?)}?</Data>')\r\n      | project-away EventData\r\n      | project-rename\r\n              SrcHostname = SourceHostname,\r\n              DstHostname = DestinationHostname\r\n      | project-away\r\n              Source,\r\n              EventLog,\r\n              EventCategory,\r\n              UserName,\r\n              Message,\r\n              ParameterXml,\r\n              RenderedDescription,\r\n              MG,\r\n              AzureDeploymentID,\r\n              Role\r\n    };\r\nlet Sysmon3_WindowsEvent=(disabled:bool=false){\r\n      WindowsEvent\r\n      | where not(disabled) \r\n      | where Provider == \"Microsoft-Windows-Sysmon\" and EventID == 3\r\n      | extend\r\n              SourceIp = tostring(EventData.SourceIp),\r\n              DestinationIp = tostring(EventData.DestinationIp),\r\n              DstHostname = tostring(EventData.DestinationHostname),\r\n              SrcHostname = tostring(EventData.SrcHostname),\r\n              RuleName = tostring(EventData.RuleName),\r\n              UtcTime = todatetime(EventData.UtcTime),\r\n              ProcessId = tostring(EventData.ProcessId),\r\n              Image = tostring(EventData.Image),\r\n              User = tostring(EventData.User),\r\n              Protocol = tostring(EventData.Protocol),\r\n              Initiated = tobool(EventData.Initiated), // Initiated indicates the process initiated a connection (meaning outbound)\r\n              SourceIsIpv6 = tobool(EventData.SourceIsIpv6),\r\n              SourcePort = toint(EventData.SourcePort),\r\n              SourcePortName = tostring(EventData.SourcePortName),\r\n              DestinationIsIpv6 = tobool(EventData.DestinationIsIpv6),\r\n              DestinationPort = toint(EventData.DestinationPort),\r\n              DestinationPortName = tostring(EventData.DestinationPortName)\r\n      | parse EventData.ProcessGuid with \"{\" ProcessGuid \"}\"\r\n      | project-away EventData\r\n      | project-away\r\n                     Provider,\r\n                     Channel,\r\n                     Task,\r\n                     Data,\r\n                     RawEventData,\r\n                     EventOriginId\r\n    };\r\nunion isfuzzy=true Sysmon3_Event,Sysmon3_WindowsEvent\r\n      | extend\r\n              AppName = tostring(split(Image, \"\\\\\")[-1])\r\n      | extend\r\n              SrcUsernameType = iff(not(Initiated), \"Windows\", \"\"),\r\n              SrcUsername = iff(not(Initiated), tostring(User), \"\"),\r\n              SrcProcessId = iff(not(Initiated), tostring(ProcessId), \"\"),\r\n              SrcProcessGuid = iff(not(Initiated), ProcessGuid, \"\"),\r\n              SrcProcessName = iff(not(Initiated), tostring(Image), \"\"),\r\n              SrcAppName = iff(not(Initiated), AppName, \"\"),\r\n              SrcAppType = iff(not(Initiated), 'Process', \"\"),\r\n              DstUsernameType = iff(Initiated, \"Windows\", \"\"),\r\n              DstUsername = iff(Initiated, tostring(User), \"\"),\r\n              DstProcessId = iff(Initiated, tostring(ProcessId), \"\"),\r\n              DstProcessGuid = iff(Initiated, ProcessGuid, \"\"),\r\n              DstProcessName = iff(Initiated, tostring(Image), \"\"),\r\n              DstAppName = iff(Initiated, AppName, \"\"),\r\n              DstAppType = iff(Initiated, 'Process', \"\")\r\n      | project-away  ProcessId, ProcessGuid, Image, AppName\r\n      | project-rename \r\n              EventStartTime = UtcTime,\r\n              Dvc = Computer,\r\n              SrcIpAddr = SourceIp,\r\n              DstIpAddr  = DestinationIp,\r\n              DstPortNumber = DestinationPort,\r\n              SrcPortNumber = SourcePort,\r\n              NetworkRuleName = RuleName \r\n      | extend \r\n              EventEndTime = EventStartTime,\r\n              Hostname = case(\r\n                              Initiated, DstHostname,\r\n                              not(Initiated), SrcHostname,\r\n                              Dvc),\r\n              Src = SrcIpAddr,\r\n              Dst = DstIpAddr,\r\n              DvcIpAddr = iff(Initiated, SrcIpAddr, DstIpAddr),\r\n              IpAddr = SrcIpAddr,\r\n              EventType = 'EndpointNetworkSession',\r\n              EventCount = int(1),\r\n              EventVendor = 'Microsoft',\r\n              EventSchemaVersion = '0.2.5',\r\n              EventSchema = 'NetworkSession', \r\n              EventProduct = 'Sysmon',\r\n              EventResult = 'Success',\r\n              EventSeverity = 'Informational',\r\n              DvcOs = 'Windows',\r\n              Protocol = toupper(Protocol),\r\n              EventOriginalType = '3' // Set with a constant value to avoid parsing   \r\n      | extend\r\n              DvcHostname = Hostname\r\n      | extend\r\n              SrcHostname = iff( SrcHostname == \"-\", \"\", SrcHostname),\r\n              DvcHostname = iff( DvcHostname == \"-\", \"\", DvcHostname),\r\n              DstHostname = iff( DstHostname == \"-\", \"\", DstHostname) // let's make empty values actually empty\r\n      | project-rename\r\n              TmpSrcHostname = SrcHostname,\r\n              TmpDvcHostname = DvcHostname,\r\n              TmpDstHostname = DstHostname\r\n      | invoke \r\n              _ASIM_ResolveSrcFQDN('TmpSrcHostname')\r\n      | invoke \r\n              _ASIM_ResolveDvcFQDN('TmpDvcHostname')\r\n      | invoke \r\n              _ASIM_ResolveDstFQDN('TmpDstHostname')\r\n      | project-away\r\n              TmpSrcHostname,\r\n              TmpDvcHostname,\r\n              TmpDstHostname\r\n      | extend                         \r\n              NetworkProtocolVersion = iff((DestinationIsIpv6) or (SourceIsIpv6), \"IPV6\", \"IPV4\"),\r\n              NetworkProtocol = toupper(Protocol)\r\n      | project-away \r\n              Destination*,\r\n              Initiated,\r\n              ManagementGroupName,\r\n              TenantId,\r\n              Protocol,\r\n              Source*,\r\n              EventID,\r\n              EventLevelName,\r\n              EventLevel\r\n    };\r\n    parser (disabled)\r\n", "params": "disabled:bool = false"}}