{"_AzureBackup_GetVaults": {"body": "// Params\r\nlet _RangeStart = iff((isnull(RangeStart)), startofday(ago(1d)), startofday(RangeStart));\r\nlet _RangeEnd = iff((isnull(RangeEnd)), startofday(now()), startofday(RangeEnd) + 1d);\r\nlet _VaultSubscriptionList = split(VaultSubscriptionList, ',');\r\nlet _VaultLocationList = split(VaultLocationList, ',');\r\nlet _VaultList = split(VaultList, ',');\r\nlet _VaultTypeList = split(VaultTypeList, ',');\r\nlet _ExcludeLegacyEvent = ExcludeLegacyEvent;\r\n// Other Vars\r\nlet AsonDay =  _RangeEnd-1d;\r\n// Source Tables\r\nlet VaultUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and columnifexists(\"SchemaVersion_s\", \"\") == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), VaultUniqueId = columnifexists(\"VaultUniqueId_s\", \"\"), VaultTags = columnifexists(\"VaultTags_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceGroupName =  columnifexists(\"ResourceGroupName_s\", \"\"), SubscriptionId = toupper(SubscriptionId), StorageReplicationType = columnifexists(\"StorageReplicationType_s\", \"\"), ResourceId, TimeGenerated \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| summarize arg_max(TimeGenerated, *) by ResourceId\r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId, ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated\r\n};\r\nlet VaultUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where isempty(VaultType)\r\n| where OperationName == \"Vault\" \r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId = toupper(SubscriptionId), ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| summarize arg_max(TimeGenerated, *) by ResourceId\r\n};\r\nlet VaultHistoryUnderAzureDiagnostics = ()\r\n{\r\nAzureDiagnostics\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where Category == \"AzureBackupReport\" and OperationName == \"Vault\" and columnifexists(\"SchemaVersion_s\", \"\") == \"V2\"\r\n| project VaultName = columnifexists(\"VaultName_s\", \"\"), VaultUniqueId = columnifexists(\"VaultUniqueId_s\", \"\"), VaultTags = columnifexists(\"VaultTags_s\", \"\"), AzureDataCenter =  columnifexists(\"AzureDataCenter_s\", \"\"), ResourceGroupName =  columnifexists(\"ResourceGroupName_s\", \"\"), SubscriptionId = toupper(SubscriptionId), StorageReplicationType = columnifexists(\"StorageReplicationType_s\", \"\"), ResourceId, TimeGenerated \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| summarize arg_max(TimeGenerated, *) by ResourceId, startofday(TimeGenerated)\r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId, ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated = TimeGenerated1\r\n};\r\nlet VaultHistoryUnderResourceSpecific = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where isempty(VaultType)\r\n| where OperationName == \"Vault\" \r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId = toupper(SubscriptionId), ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| summarize arg_max(TimeGenerated, *) by ResourceId, startofday(TimeGenerated)\r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId, ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated = TimeGenerated1\r\n};\r\nlet Vault_LatestTable = () {union isfuzzy = true \r\n(VaultUnderAzureDiagnostics() | where _ExcludeLegacyEvent == false),\r\n(VaultUnderResourceSpecific())\r\n// To show as per as on 'AsonDay'\r\n| where startofday(TimeGenerated) == AsonDay\r\n| summarize arg_max(TimeGenerated, *)   by VaultUniqueId\r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId, ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated};\r\nlet Vault_HistoryTable = () {union isfuzzy = true \r\n(VaultHistoryUnderAzureDiagnostics() | where _ExcludeLegacyEvent == false),\r\n(VaultHistoryUnderResourceSpecific())\r\n| summarize arg_max(TimeGenerated, *)   by VaultUniqueId, startofday(TimeGenerated)\r\n| project StorageReplicationType, VaultUniqueId, VaultName, VaultTags, SubscriptionId, ResourceGroupName, AzureDataCenter, ResourceId, TimeGenerated = TimeGenerated1};\r\n// FinalTable From V1 Vault\r\nlet FinalTable_V1Vault = () {union (Vault_LatestTable | where (_RangeEnd-_RangeStart == 1d)), (Vault_HistoryTable | where (_RangeEnd-_RangeStart > 1d))\r\n| project UniqueId = VaultUniqueId, Name = VaultName, Id = ResourceId, SubscriptionId, Location = AzureDataCenter, VaultStore_StorageReplicationType = StorageReplicationType, Tags = VaultTags,  TimeGenerated, Type = \"Microsoft.RecoveryServices/vaults\"\r\n};\r\nlet VaultHistoryUnderResourceSpecificForDPP = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where VaultType == \"Microsoft.DataProtection/backupVaults\"\r\n| where OperationName == \"Vault\" \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| where  VaultType in~  (_VaultTypeList) or '*' in (_VaultTypeList)\r\n| project VaultStore_StorageReplicationType = StorageReplicationType, ArchiveStore_StorageReplicationType = ArchiveTierStorageReplicationType, UniqueId = toupper(VaultUniqueId), Name = VaultName, Tags = VaultTags, SubscriptionId = toupper(SubscriptionId), ResourceGroupName, Location = AzureDataCenter, Id = toupper(ResourceId), TimeGenerated, Type = VaultType\r\n| summarize arg_max(TimeGenerated, *) by UniqueId, TimeRangeEndDay = startofday(TimeGenerated)\r\n| project UniqueId, Id, Name, SubscriptionId, Location, VaultStore_StorageReplicationType,ArchiveStore_StorageReplicationType, Tags, TimeGenerated = TimeRangeEndDay, Type\r\n};\r\nlet VaultUnderResourceSpecificForDPP = ()\r\n{\r\nCoreAzureBackup\r\n// Take records until previous day\r\n| where TimeGenerated >= _RangeStart and TimeGenerated <= _RangeEnd and TimeGenerated < startofday(now())\r\n| where VaultType == \"Microsoft.DataProtection/backupVaults\"\r\n| where OperationName == \"Vault\" \r\n| where SubscriptionId in~ (_VaultSubscriptionList) or '*' in (_VaultSubscriptionList)\r\n| where AzureDataCenter in~ (_VaultLocationList) or '*' in (_VaultLocationList)\r\n| where VaultName in~  (_VaultList) or '*' in (_VaultList)\r\n| where VaultType in~  (_VaultTypeList) or '*' in (_VaultTypeList)\r\n| project VaultStore_StorageReplicationType = StorageReplicationType, ArchiveStore_StorageReplicationType = ArchiveTierStorageReplicationType, UniqueId = toupper(VaultUniqueId), Name = VaultName, Tags = VaultTags, SubscriptionId = toupper(SubscriptionId), ResourceGroupName, Location = AzureDataCenter, Id = toupper(ResourceId), TimeGenerated, Type = VaultType\r\n| summarize arg_max(TimeGenerated, *) by UniqueId\r\n| project UniqueId, Id, Name, SubscriptionId, Location, VaultStore_StorageReplicationType, ArchiveStore_StorageReplicationType, Tags, TimeGenerated, Type\r\n};\r\nlet FinalTable_DPP = ()\r\n{\r\nunion (VaultUnderResourceSpecificForDPP | where (_RangeEnd-_RangeStart == 1d)), (VaultHistoryUnderResourceSpecificForDPP | where (_RangeEnd-_RangeStart > 1d))\r\n| project UniqueId, Id, Name, SubscriptionId, Location, VaultStore_StorageReplicationType, ArchiveStore_StorageReplicationType, Tags, TimeGenerated, Type\r\n};\r\nlet FinalTable_Reporting = ()\r\n{\r\nunion (FinalTable_DPP | where \"Microsoft.DataProtection/backupVaults\" in~ (_VaultTypeList) or '*' in (_VaultTypeList)), (FinalTable_V1Vault | where \"Microsoft.RecoveryServices/vaults\" in~ (_VaultTypeList) or '*' in (_VaultTypeList))\r\n};\r\nFinalTable_Reporting", "params": "RangeStart:datetime = datetime(null), RangeEnd:datetime = datetime(null), VaultSubscriptionList:string=\"*\", VaultLocationList:string=\"*\", VaultList:string=\"*\", VaultTypeList:string=\"*\", ExcludeLegacyEvent:bool=True"}}