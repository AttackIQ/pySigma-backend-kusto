{"_ASim_AuditEvent_MicrosoftExchangeAdmin365V02": {"body": "let usertypes=datatable (ActorOriginalUserType:string, ActorUserType:string)\r\n[\r\n // Regular, Regular\r\n \"Admin\", \"Admin\"\r\n , \"DcAdmin\", \"Admin\"\r\n , \"System\", \"System\"\r\n , \"Application\", \"Application\"\r\n , \"ServicePrincipal\", \"Service Principal\"\r\n , \"CustomPolicy\", \"Other\"\r\n , \"SystemPolicy\", \"Other\"\r\n , \"Reserved\", \"Other\"\r\n];\r\nlet eventtypes=datatable (op:string, EventType:string)\r\n[\r\n \"Remove\", \"Delete\",\r\n \"New\", \"Create\",\r\n \"Add\", \"Create\",\r\n \"Enable\", \"Enable\",\r\n \"Install\", \"Install\",\r\n \"Set\", \"Set\",\r\n \"Disable\", \"Disable\",\r\n \"disable\", \"Disable\"\r\n];\r\nlet parser=(disabled:bool=false){\r\n  OfficeActivity\r\n  | where not(disabled)\r\n  | where RecordType  in ('ExchangeAdmin')\r\n  | project Operation, ResultStatus, Parameters, OrganizationName, OrganizationId, OfficeObjectId, ClientIP, UserId, UserKey, UserAgent, UserType, TimeGenerated, OriginatingServer, SourceRecordId, Type, _ResourceId\r\n  | extend \r\n      SplitOp = split (Operation,\"-\")\r\n  | extend\r\n      op=tostring(SplitOp[0])\r\n  | lookup eventtypes on op\r\n  | project-away op\r\n  // --\r\n  // Calculate Object\r\n  | extend\r\n      SplitObject = extract_all(@'^(.*?)[\\\\/](.*)$', OfficeObjectId)[0]\r\n  | extend \r\n      Object = case (\r\n          SplitObject[0] == OrganizationName, SplitObject[1], \r\n          OfficeObjectId == \"\", SplitOp[1],\r\n          OfficeObjectId\r\n      )\r\n  | project-away SplitOp, OfficeObjectId\r\n  // --\r\n  // Calculate source IP address and port\r\n  | extend \r\n      SplitIpAddr = extract_all(@'^\\[?(.*?)\\]?:(\\d+)$', ClientIP)[0]\r\n  | extend \r\n      SrcIpAddr = iff (SplitIpAddr[1] == \"\", ClientIP, SplitIpAddr[0]),\r\n      SrcPortNumber = toint(iff (SplitIpAddr[1] == \"\", \"\", SplitIpAddr[1]))\r\n  | parse UserId with ActorUsername \" (\" ActingAppName \")\"\r\n  | extend \r\n      ActorUsernameType = iff (ActorUsername == \"\", \"UPN\", \"Windows\"),\r\n      ActorUsername = iff (ActorUsername == \"\", UserId, ActorUsername),\r\n      ActingAppType = iff (ActingAppName == \"\", \"\", \"Process\")\r\n  | project-rename\r\n      SrcDescription = OriginatingServer,\r\n      NewValue = Parameters \r\n  | project-away SplitObject, UserKey, SplitIpAddr, ClientIP, UserId\r\n  | project-rename\r\n      HttpUserAgent = UserAgent, \r\n      ActorOriginalUserType = UserType,\r\n      ActorScopeId = OrganizationId,\r\n      ActorScope = OrganizationName,\r\n      EventOriginalUid = SourceRecordId\r\n  | lookup usertypes on ActorOriginalUserType\r\n  | extend\r\n      EventCount = int(1),\r\n      EventStartTime = TimeGenerated, \r\n      EventEndTime= TimeGenerated,\r\n      EventProduct = 'Exchange 365',\r\n      EventVendor = 'Microsoft',\r\n      EventSchemaVersion = '0.1.0',\r\n      EventSchema = 'AuditEvent',\r\n      TargetAppName = 'Exchange 365',\r\n      TargetAppType = 'SaaS application',\r\n      EventResult = iff(ResultStatus == \"True\", \"Success\", \"Failure\")\r\n  | project-away \r\n      ResultStatus\r\n  | extend\r\n      EventSeverity = iff(EventResult == \"Failure\", \"Low\", \"Informational\")\r\n  // -- Aliases\r\n  | extend \r\n      User=ActorUsername,\r\n      IpAddr = SrcIpAddr,\r\n      Value = NewValue,\r\n      Application = TargetAppName,\r\n      Dst = TargetAppName,\r\n      Src = coalesce (SrcIpAddr, SrcDescription),\r\n      Dvc = TargetAppName,\r\n  // -- Entity identifier explicit aliases\r\n      ActorUserUpn = iif (ActorUsernameType == \"UPN\", ActorUsername, \"\"),\r\n      ActorWindowsUsername = iif (ActorUsernameType == \"Windows\", ActorUsername, \"\")\r\n };\r\n parser (disabled=disabled)", "params": "disabled:bool = false"}}