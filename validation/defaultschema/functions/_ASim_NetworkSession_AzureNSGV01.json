{"_ASim_NetworkSession_AzureNSGV01": {"body": "let DvcActionLookup = datatable(FlowStatus_s:string, DvcAction:string, EventResult:string) [\r\n    'A', 'Allow', 'Success',\r\n    'D', 'Deny', 'Failure',\r\n];\r\nlet NetworkDirectionLookup = datatable(FlowDirection_s:string, NetworkDirection:string, isOutBound:bool) [\r\n    'I', 'Inbound', false,\r\n    'O', 'Outbound', true\r\n];\r\nlet NetworkProtocolLookup = datatable(L4Protocol_s:string, NetworkProtocol:string)[\r\n    'T', 'TCP',\r\n    'U', 'UDP'\r\n];\r\nlet parser = (disabled:bool=false) \r\n{\r\n  let AzureNetworkAnalytics = (FlowDirection: string) {\r\n    AzureNetworkAnalytics_CL\r\n    | where not(disabled) and isnotempty(FlowType_s)\r\n    | where FlowDirection == FlowDirection_s\r\n    | lookup NetworkDirectionLookup on FlowDirection_s\r\n  };\r\n  let AzureNetworkAnalyticsInbound =\r\n    AzureNetworkAnalytics ('I')\r\n    | where not(isOutBound)\r\n    | project-rename\r\n        DstMacAddr = MACAddress_s\r\n    | extend\r\n        DstBytes = tolong(OutboundBytes_d), // -- size fields seem not to be populated for inbound\r\n        DstPackets = tolong(OutboundPackets_d),\r\n        SrcBytes = tolong(InboundBytes_d),\r\n        SrcPackets = tolong(InboundPackets_d),\r\n        SrcInterfaceName = tostring(split(NIC_s, '/')[1]),\r\n        SrcGeoCountry = toupper(Country_s)\r\n    | extend hostelements=split(VM2_s,'/')\r\n    | extend \r\n        DstFQDN = strcat(hostelements[0], @\"\\\", hostelements[1]),\r\n        DstHostname = tostring(hostelements[1]),\r\n        DstDomain = tostring(hostelements[0]),\r\n        DstDomainType = \"ResourceGroup\"\r\n    | extend Hostname = DstHostname\r\n    | project-away hostelements, isOutBound\r\n  ;  \r\n  let AzureNetworkAnalyticsOutbound =\r\n    AzureNetworkAnalytics ('O')\r\n    | where isOutBound\r\n    | project-rename\r\n        SrcMacAddr = MACAddress_s\r\n    | extend\r\n        SrcBytes = tolong(OutboundBytes_d), \r\n        SrcPackets = tolong(OutboundPackets_d),\r\n        DstBytes = tolong(InboundBytes_d),\r\n        DstPackets = tolong(InboundPackets_d),\r\n        DstInterfaceName = tostring(split(NIC_s, '/')[1]),\r\n        DstGeoCountry = toupper(Country_s)\r\n    | extend hostelements=split(VM1_s,'/')\r\n    | extend \r\n        SrcFQDN = strcat(hostelements[0], @\"\\\", hostelements[1]),\r\n        SrcHostname = tostring(hostelements[1]),\r\n        SrcDomain = tostring(hostelements[0]),\r\n        SrcDomainType = \"ResourceGroup\"\r\n    | extend Hostname = SrcHostname\r\n    | project-away hostelements, isOutBound\r\n  ;\r\n  union AzureNetworkAnalyticsInbound, AzureNetworkAnalyticsOutbound\r\n  | project-rename\r\n      Dvc = NSGList_s,\r\n      DvcSubscriptionId = Subscription_g,\r\n      EventEndTime = FlowEndTime_t,\r\n      EventStartTime = FlowStartTime_t,\r\n      NetworkApplicationProtocol = L7Protocol_s,\r\n      NetworkRuleName = NSGRule_s,\r\n      NetworkSessionId = ConnectionName_s,\r\n      EventOriginalSubType = FlowType_s\r\n  | extend\r\n      DstPortNumber = toint(DestPort_d),\r\n      EventProduct = 'NSGFlow',\r\n      EventSchema = 'NetworkSession',\r\n      EventSchemaVersion='0.2.2',\r\n      EventSeverity = 'Informational', //??\r\n      EventType = 'Flow',\r\n      EventVendor = 'Microsoft',\r\n      EventCount = toint(AllowedInFlows_d+DeniedInFlows_d+AllowedOutFlows_d+DeniedOutFlows_d),\r\n      NetworkDuration = toint((((EventEndTime - datetime(1970-01-01)) / 1s) - ((EventStartTime - datetime(1970-01-01)) / 1s )) * 1000),\r\n      Rule = NetworkRuleName,\r\n      SessionId = NetworkSessionId\r\n  | lookup DvcActionLookup on FlowStatus_s\r\n  | extend \r\n      DstIpAddr = iff(isnotempty(DestIP_s),\r\n                      DestIP_s,\r\n                      split(DestPublicIPs_s, '|')[0]),\r\n      Duration = NetworkDuration,\r\n      NetworkBytes = tolong(DstBytes + SrcBytes),\r\n      NetworkPackets = tolong(DstPackets + SrcPackets),\r\n      SrcIpAddr = iff(isnotempty(SrcIP_s),\r\n                      SrcIP_s,\r\n                      split(SrcPublicIPs_s, '|')[0])\r\n  | extend\r\n      Dst = DstIpAddr,\r\n      IpAddr = SrcIpAddr,\r\n      Src = SrcIpAddr\r\n  | lookup NetworkProtocolLookup on L4Protocol_s\r\n  | project-keep\r\n      Src*,\r\n      Dst*,\r\n      Event*,\r\n      Dvc*,\r\n      Network*,\r\n      IpAddr,\r\n      Hostname,\r\n      Type,\r\n      Duration,\r\n      SessionId,\r\n      _ResourceId,\r\n      TimeGenerated\r\n  | project-away *_s\r\n  };\r\nparser (disabled)", "params": "disabled:bool = false"}}