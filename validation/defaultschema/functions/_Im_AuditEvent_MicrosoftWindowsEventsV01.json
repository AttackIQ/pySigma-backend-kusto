{"_Im_AuditEvent_MicrosoftWindowsEventsV01": {"body": "let parser=  (\r\n     starttime:datetime=datetime(null), \r\n     endtime:datetime=datetime(null),\r\n     srcipaddr_has_any_prefix:dynamic=dynamic([]), \r\n     eventresult:string='*',\r\n     actorusername_has_any:dynamic=dynamic([]),\r\n     eventtype_in:dynamic=dynamic([]),\r\n     operation_has_any:dynamic=dynamic([]),\r\n     object_has_any:dynamic=dynamic([]),\r\n     newvalue_has_any:dynamic=dynamic([]),\r\n     disabled:bool = false\r\n ) {    \r\n union \r\n (\r\n     union \r\n     (\r\n         SecurityEvent\r\n         | where \r\n             (isnull(starttime) or TimeGenerated >= starttime) \r\n             and (isnull(endtime) or TimeGenerated <= endtime)\r\n             and not(disabled)\r\n         | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\r\n         | where EventID == 1102\r\n     ),\r\n     (\r\n         Event\r\n         | where \r\n             (isnull(starttime) or TimeGenerated >= starttime) \r\n             and (isnull(endtime) or TimeGenerated <= endtime)\r\n             and not(disabled)\r\n         | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\r\n         | where EventID == 1102\r\n     )\r\n     | where\r\n        (array_length(srcipaddr_has_any_prefix) == 0)\r\n        and (array_length(newvalue_has_any) == 0)\r\n        and (array_length(object_has_any) == 0 or \"Logs\" in (object_has_any))\r\n        and (array_length(operation_has_any) == 0 or \"Delete Logs\" has_any (operation_has_any))\r\n        and (array_length(eventtype_in) == 0 or \"Delete\" in (eventtype_in))\r\n        and (array_length(actorusername_has_any) == 0 or EventData has_any (actorusername_has_any))\r\n     | parse-kv EventData as \r\n         (\r\n             SubjectUserSid:string,\r\n             SubjectUserName:string,\r\n             SubjectDomainName:string,\r\n             SubjectLogonId:string\r\n         ) \r\n         with (regex=@'<(\\w+)>([^<]*)<')\r\n     | where \r\n         array_length(actorusername_has_any) == 0 \r\n         or SubjectUserName has_any (actorusername_has_any) \r\n         or SubjectDomainName has_any (actorusername_has_any)\r\n     | project-away EventData\r\n ),\r\n (\r\n     WindowsEvent \r\n     | where \r\n         (isnull(starttime) or TimeGenerated >= starttime) \r\n         and (isnull(endtime) or TimeGenerated <= endtime)\r\n         and not(disabled)\r\n     | project EventID, EventData, _ResourceId, TimeGenerated, Computer, Type\r\n     | where EventID == 1102\r\n     | where (array_length(srcipaddr_has_any_prefix) == 0)\r\n        and (array_length(newvalue_has_any) == 0)\r\n        and (array_length(object_has_any) == 0 or \"Logs\" in (object_has_any))\r\n        and (array_length(operation_has_any) == 0 or \"Delete Logs\" has_any (operation_has_any))\r\n        and (array_length(eventtype_in) == 0 or \"Delete\" in (eventtype_in))\r\n     | extend\r\n         SubjectUserSid = tostring(EventData.SubjectUserSid),\r\n         SubjectUserName = tostring(EventData.SubjectUserName),\r\n         SubjectDomainName = tostring(EventData.SubjectDomainName),\r\n         SubjectLogonId = tostring(EventData.SubjectLogonId)\r\n     | where \r\n         array_length(actorusername_has_any) == 0 \r\n         or SubjectUserName has_any (actorusername_has_any) \r\n         or SubjectUserName has_any (actorusername_has_any)\r\n     | project-away EventData\r\n )\r\n | project-rename\r\n     ActorUserId = SubjectUserSid,\r\n     DvcHostname = Computer,\r\n     ActorSessionId = SubjectLogonId,\r\n     DvcId = _ResourceId\r\n | extend\r\n     EventCount = int(1),\r\n     EventType = \"Delete\",\r\n     Operation = \"Delete Logs\",\r\n     Object = \"Logs\",\r\n     EventResult = \"Success\",\r\n     EventStartTime = TimeGenerated, \r\n     EventEndTime= TimeGenerated,\r\n     EventProduct = 'Windows',\r\n     EventVendor = 'Microsoft',\r\n     EventSchemaVersion = '0.1.0',\r\n     EventSchema = 'AuditEvent',\r\n     ActorUserIdType = 'SID',\r\n     ActorUsername = iff (SubjectDomainName == \"\", SubjectUserName, strcat (SubjectDomainName, '\\\\', SubjectUserName)),\r\n     ActorUsernameType = iff (SubjectDomainName == \"\", 'Simple', 'Windows'),\r\n     DvcIdType = iff (DvcId == \"\", \"\", \"AzureResourceID\"),\r\n     EventOriginalType = tostring(EventID)\r\n // Aliases\r\n | extend \r\n     User=ActorUsername,\r\n     ActorUserSid = ActorUserId,\r\n     Dvc = DvcHostname\r\n | project-away Subject*, EventID\r\n};\r\nparser (\r\n   starttime = starttime,\r\n   endtime = endtime,\r\n   srcipaddr_has_any_prefix = srcipaddr_has_any_prefix,\r\n   actorusername_has_any = actorusername_has_any,\r\n   eventtype_in = eventtype_in,\r\n   eventresult = eventresult,\r\n   operation_has_any = operation_has_any,\r\n   object_has_any=object_has_any,\r\n   newvalue_has_any=newvalue_has_any,\r\n   disabled=disabled\r\n)", "params": "starttime:datetime = datetime(null), endtime:datetime = datetime(null), srcipaddr_has_any_prefix:dynamic = dynamic([]), actorusername_has_any:dynamic = dynamic([]), operation_has_any:dynamic = dynamic([]), eventtype_in:dynamic = dynamic([]), eventresult:string = '*', object_has_any:dynamic = dynamic([]), newvalue_has_any:dynamic = dynamic([]), disabled:bool = false"}}