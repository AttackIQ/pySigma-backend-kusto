{"_ASim_NetworkSession_WatchGuardFirewareOSV01": {"body": "let Parser=(disabled:bool=false){\r\n  let EventLookup=datatable(DvcAction:string,EventResult:string,EventSeverity:string)\r\n  [\r\n      \"Allow\",\"Success\",\"Informational\"\r\n      , \"Deny\",\"Failure\",\"Low\"\r\n  ];\r\n  let SyslogParser = (T:(SyslogMessage:string)) {\r\n      T\r\n      | parse-kv SyslogMessage as (geo_src:string\r\n      , geo_dst:string\r\n      , src_user:string\r\n      , dst_user:string\r\n      , duration:int\r\n      , sent_bytes:long\r\n      , rcvd_bytes:long\r\n      , fqdn_src_match:string\r\n      , fqdn_dst_match:string) with (pair_delimiter=' ', kv_delimiter='=', quote='\"')\r\n      | project-rename SrcGeoCountry = geo_src\r\n      , DstGeoCountry = geo_dst\r\n      , SrcUsername = src_user\r\n      , DstUsername = dst_user\r\n      , NetworkDuration = duration\r\n      , SrcBytes = sent_bytes\r\n      , DstBytes = rcvd_bytes\r\n      , DstDomain = fqdn_dst_match\r\n      , SrcDomain = fqdn_src_match\r\n      | extend DvcAction = extract(@'\" (Allow|Deny) ', 1, SyslogMessage)\r\n      | lookup EventLookup on DvcAction\r\n      | extend DstDomainType = iif(isnotempty(DstDomain),\"FQDN\",\"\")\r\n      | extend SrcDomainType = iif(isnotempty(SrcDomain),\"FQDN\",\"\")\r\n      | extend NetworkProtocol = extract(@\" (tcp|udp|icmp|igmp) \", 1, SyslogMessage)\r\n      | extend SrcUsernameType = case(isempty(SrcUsername), \"\"\r\n        , countof(SrcUsername, \"@\") == 1, \"UPN\"\r\n        , \"Simple\"\r\n      )\r\n      | extend DstUsernameType = case(isempty(DstUsername), \"\"\r\n        , countof(DstUsername, \"@\") == 1, \"UPN\"\r\n        , \"Simple\"\r\n      )\r\n      | parse SyslogMessage with * \"repeated \" EventCount:int \" times\" *\r\n      | extend EventCount = iif(isnotempty(EventCount), EventCount, toint(1))\r\n      | project-away SyslogMessage\r\n  };\r\n  let AllSyslog = \r\n  Syslog\r\n  | where not(disabled)\r\n  | where SyslogMessage has_any('msg_id=\"3000-0148\"' \r\n      , 'msg_id=\"3000-0149\"' \r\n      , 'msg_id=\"3000-0150\"'\r\n      , 'msg_id=\"3000-0151\"'\r\n      , 'msg_id=\"3000-0173\"'\r\n  ) and SyslogMessage !has 'msg=\"DNS Forwarding\" '\r\n  | project TimeGenerated, SyslogMessage, HostName\r\n  ;\r\n  let Parse1 = \r\n  AllSyslog\r\n  | where SyslogMessage !has \"icmp\" and SyslogMessage !has \"igmp\" and SyslogMessage !has \"3000-0151\"\r\n  | parse kind=regex flags=U SyslogMessage with * @'\" (Allow|Deny) ' RuleName @\" \\d{2,5} (tcp|udp) \\d{2,5} \\d{2,5} \" SrcIpAddr \" \" DstIpAddr \" \" SrcPortNumber:int @\" \" DstPortNumber:int @\" \" *\r\n  | invoke SyslogParser()\r\n  ;\r\n  let Parse2 = \r\n  AllSyslog\r\n  | where SyslogMessage !has \"icmp\" and SyslogMessage !has \"igmp\" and SyslogMessage has \"3000-0151\"\r\n  | parse kind=regex flags=U SyslogMessage with * @'\" (Allow|Deny) ' RuleName @\" (tcp|udp) \" SrcIpAddr \" \" DstIpAddr \" \" SrcPortNumber:int @\" \" DstPortNumber:int @\" \" *\r\n  | invoke SyslogParser()\r\n  ;\r\n  let Parse3 = \r\n  AllSyslog\r\n  | where SyslogMessage has \"icmp\" and SyslogMessage !has \"3000-0151\"\r\n  | parse kind=regex flags=U SyslogMessage with * @'\" (Allow|Deny) ' RuleName @\" \\d{2,5} icmp \\d{2,5} \\d{1,5} \" SrcIpAddr \" \" DstIpAddr \" \" * \r\n  | invoke SyslogParser()\r\n  ;\r\n  let Parse4 = \r\n  AllSyslog\r\n  | where SyslogMessage has \"icmp\" and SyslogMessage has \"3000-0151\"\r\n  | parse kind=regex flags=U SyslogMessage with * @'\" (Allow|Deny) ' RuleName @\" icmp \" SrcIpAddr \" \" DstIpAddr \" \" * \r\n  | invoke SyslogParser()\r\n  ;\r\n  let Parse5 = \r\n  AllSyslog\r\n  | where SyslogMessage has \"igmp\" and SyslogMessage !has \"3000-0151\"\r\n  | parse kind=regex flags=U SyslogMessage with * @'\" (Allow|Deny) ' RuleName @\" \\d{2,5} igmp \\d{2,5} \\d{1,5} \" SrcIpAddr \" \" DstIpAddr \" \" * \r\n  | invoke SyslogParser()\r\n  ;\r\n  union isfuzzy=false Parse1, Parse2, Parse3, Parse4, Parse5\r\n  | extend EventSchema = \"NetworkSession\"\r\n      , EventSchemaVersion = \"0.2.4\"\r\n      , EventVendor = \"WatchGuard\"\r\n      , EventProduct = \"Fireware\"\r\n      , EventType = \"NetworkSession\"\r\n      , DvcHostname = HostName\r\n      , NetworkProtocolVersion = case(DstIpAddr contains \".\", \"IPv4\"\r\n          , DstIpAddr contains \":\", \"IPv6\"\r\n          , \"\")\r\n      , NetworkProtocol = toupper(NetworkProtocol)\r\n      , NetworkDuration = toint(NetworkDuration * toint(1000))\r\n      , NetworkBytes = SrcBytes + DstBytes\r\n      , EventEndTime = TimeGenerated\r\n      , EventStartTime = TimeGenerated\r\n      , Src = SrcIpAddr\r\n      , Dst = DstIpAddr\r\n      , Duration = NetworkDuration\r\n      , User = DstUsername\r\n      , IpAddr = SrcIpAddr\r\n  | project-rename Dvc = HostName\r\n};\r\nParser (disabled)", "params": "disabled:bool = false"}}