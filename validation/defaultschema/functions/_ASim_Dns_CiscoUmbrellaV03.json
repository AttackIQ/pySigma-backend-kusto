{"_ASim_Dns_CiscoUmbrellaV03": {"body": "let DNSQuery_CiscoUmbrella=(disabled:bool=false){\r\n    Cisco_Umbrella_dns_CL | where not(disabled)\r\n    // \r\n    // *********** Parsing\r\n    | parse QueryType_s with DnsQueryType:int \" (\"DnsQueryTypeName:string \")\"\r\n    //\r\n    | project \r\n    //\r\n    // ******************* Mandatory\r\n       EventCount=int(1),\r\n       EventStartTime= column_ifexists(\"Timestamp_t\", todatetime(column_ifexists(\"Timestamp_s\",\"\"))),\r\n       EventProduct=\"Umbrella\",\r\n       EventVendor=\"Cisco\",\r\n       EventSchema=\"Dns\",\r\n       EventSchemaVersion=\"0.1.3\",\r\n       Dvc=\"CiscoUmbrella\",\r\n       EventType=\"Query\",\r\n       EventResult=iff(ResponseCode_s=~'NOERROR','Success','Failure'),\r\n       EventResultDetails=ResponseCode_s,  // => ResponseCodeNames\r\n       //\r\n       TimeGenerated, // not handled by schema, but we need to preserve it\r\n       SrcIpAddr=column_ifexists('InternalIp_s', ''),\r\n       EventSubType='response',\r\n  // ********** Renamed columns\r\n       UrlCategory=column_ifexists('Categories_s', ''),\r\n       DnsQuery=trim_end(@'\\.',column_ifexists('Domain_s', '')) , \r\n       ThreatCategory=column_ifexists('Blocked_Categories_s', ''),\r\n       SrcNatIpAddr=column_ifexists('ExternalIp_s', ''),\r\n       DvcAction=column_ifexists('Action_s', ''),\r\n       EventEndTime=todatetime(column_ifexists('Timestamp_t',  column_ifexists('Timestamp_s',\"\")  )),  \r\n   //\r\n   // *************** keep Parsed data\r\n       DnsQueryType, DnsQueryTypeName\r\n  // **************Aliases\r\n  | extend \r\n      DnsResponseCodeName=EventResultDetails, \r\n      DomainCategory=UrlCategory,\r\n      Domain=DnsQuery,\r\n      IpAddr=SrcIpAddr,\r\n      Src=SrcIpAddr\r\n  };\r\nDNSQuery_CiscoUmbrella(disabled)", "params": "disabled:bool = false"}}