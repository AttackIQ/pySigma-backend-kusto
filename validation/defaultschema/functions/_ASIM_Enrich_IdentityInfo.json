{"_ASIM_Enrich_IdentityInfo": {"body": "let AADinfo = \r\n    IdentityInfo\r\n    | where TimeGenerated > ago(14d)\r\n    | where AccountObjectId != \"\"\r\n    | project-away AccountName, AccountDomain, GivenName, Surname, Type, TenantId, OnPremisesExtensionAttributes, UserState, UserStateChangedOn, SourceSystem\r\n    | project-away InvestigationPriority, InvestigationPriorityPercentile, ExtensionProperty, AccountCloudSID, Applications, ServicePrincipals\r\n    | summarize arg_max(TimeGenerated, *) by UserScopeId = AccountTenantId, UserId = AccountObjectId\r\n    | project-away TimeGenerated\r\n    | project-rename\r\n        Username = AccountUPN,\r\n        UserDisplayName = AccountDisplayName,\r\n        UserSid = AccountSID,\r\n        UserDN = OnPremisesDistinguishedName,\r\n        UserTags = Tags,\r\n        UserRiskLevel = RiskLevel,\r\n        UserRiskLevelDetails = RiskLevelDetails,\r\n        UserRiskState = RiskState, \r\n        UserBlastRadius = BlastRadius,\r\n        UserGroupMembership = GroupMembership,\r\n        UserAssignedRoles = AssignedRoles,\r\n        UserDepartment = Department,\r\n        UserEmployeeId = EmployeeId,\r\n        UserJobTitle = JobTitle,\r\n        UserMailAddress = MailAddress,\r\n        UserAdditionalMailAddresses = AdditionalMailAddresses,\r\n        UserManager = Manager,\r\n        UserStreetAddress = StreetAddress,\r\n        UserCity = City,\r\n        UserCountry = Country,\r\n        UserRegion = State,\r\n        UserPhone = Phone,\r\n        UserAccountEnabled = IsAccountEnabled,\r\n        UserAccountCreationTime = AccountCreationTime,\r\n        RelatedUsers = RelatedAccounts,\r\n        UserDeleted = DeletedDateTime,\r\n        UserLastSeen = LastSeenDate,\r\n        UserUACFlags = UACFlags,\r\n        UserIsMFARegistered = IsMFARegistered,\r\n        UserRiskScore = EntityRiskScore\r\n    | extend \r\n        UsernameType = \"UPN\",\r\n        UserIdType = \"AadId\",\r\n        UserType = iff(UserType == \"Guest\", UserType, \"\"),\r\n        UserUpn = Username\r\n;\r\nT \r\n| extend\r\n    jkUserId = column_ifexists(AadIdField,''),\r\n    jkUserScopeId = column_ifexists(TenantIdField,''), \r\n    jkUserSid = column_ifexists(SidField,''), \r\n    jkUsername = column_ifexists(UpnField,''), \r\n    jkUserMailAddress = column_ifexists(EmailField,'')\r\n| extend \r\n    jkUserAadFullId = iff (isnotempty(jkUserScopeId), strcat(jkUserScopeId, '/', jkUserId), jkUserId)\r\n| extend\r\n    join_key = coalesce (jkUserAadFullId, jkUserSid, jkUsername, jkUserMailAddress)\r\n| lookup ( \r\n    AADinfo \r\n    | extend join_key = case ( \r\n        isnotempty(TenantIdField), strcat(UserScopeId, '/', UserId), \r\n        isnotempty(AadIdField), UserId,\r\n        isnotempty(SidField), UserSid,\r\n        isnotempty(UpnField), UserUpn,            \r\n        isnotempty(EmailField), UserMailAddress,\r\n        ''\r\n    )\r\n) on join_key\r\n| project-away jkUserId, jkUserAadFullId, jkUserMailAddress, jkUsername, jkUserScopeId, jkUserSid, join_key\r\n", "params": "T:(*), AadIdField:string = '', TenantIdField:string = '', SidField:string = '', UpnField:string = '', EmailField:string = ''"}}