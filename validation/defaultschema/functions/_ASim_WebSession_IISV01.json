{"_ASim_WebSession_IISV01": {"body": "let parser = (disabled: bool = false)\r\n      {\r\n      W3CIISLog\r\n      | extend\r\n              EventResult = iff ( toint(scStatus) < 400, \"Success\", \"Failure\"),\r\n              EventResultDetails = tostring(scStatus), \r\n              csUriQuery = iff(csUriQuery == \"-\", \"\", csUriQuery),\r\n              csUserName = iff(csUserName == \"-\", \"\", csUserName),\r\n              HttpVersion = iff((csVersion has \"HTTP\"), split(csVersion, \"/\")[1], \"\") // there is a limited chance that something connects over non-HTTP\r\n      | project-rename \r\n              HttpHost = sSiteName,\r\n              HttpRequestMethod = csMethod,\r\n              HttpReferrer = csReferer,\r\n              User = csUserName, //probably won't have this one often\r\n              Dvc = Computer,\r\n              Dst = sIP,\r\n              Src = cIP,\r\n              UserAgent = csUserAgent,\r\n              ThreatCategory = IndicatorThreatType,\r\n              SrcGeoCountry = RemoteIPCountry,\r\n              SrcGeoLatitude = RemoteIPLatitude,\r\n              SrcGeoLongitude = RemoteIPLongitude,\r\n              ThreatOriginalConfidence = Confidence,\r\n              ThreatIpAddr = MaliciousIP,\r\n              EventReportUrl = ReportReferenceLink\r\n      | extend\r\n              EventOriginalSeverity = tostring(Severity),\r\n              ThreatIsActive = tobool(IsActive),\r\n              ThreatFirstReportedTime = todatetime(FirstReportedDateTime),\r\n              ThreatLastReportedTime = todatetime(LastReportedDateTime),\r\n              SrcUsername = iff ( User == \"-\", \"\", User)\r\n      | extend \r\n              SrcUsernameType = case( \r\n                                      SrcUsername contains \"@\" , \"UPN\"\r\n                                    , SrcUsername contains \"\\\\\", \"Windows\"\r\n                                    , (SrcUsername has \"CN=\" or SrcUsername has \"OU=\" or SrcUsername has \"DC=\"), \"DN\"\r\n                                    , \"Simple\"\r\n                                    ),\r\n              DstNatIpAddr = iff(csHost <> \"\", Dst, \"\"),\r\n              EventType = 'WebServerSession',            \r\n              EventVendor = 'Microsoft',\r\n              EventSchemaVersion = '0.2.5',\r\n              EventSchema = 'WebSession', \r\n              EventProduct = 'IIS',\r\n              DvcOs = 'Windows',\r\n              EventCount = int(1),\r\n              SrcIpAddr = Src,\r\n              IpAddr = Src,\r\n              HttpUserAgent = UserAgent,\r\n              HttpStatusCode = tostring(EventResultDetails),\r\n              EventStartTime = ( (TimeGenerated) - (TimeTaken * 1ms)), // TimeTaken field is in Milliseconds \r\n              EventEndTime =  TimeGenerated,\r\n              EventSeverity = iff(EventResult == \"Success\", \"Low\", \"Informational\"),\r\n              tempURLconstruct = iff(csUriQuery == \"\", csUriStem, strcat(csUriStem,\"?\",csUriQuery)),\r\n              sPort = tostring(sPort),\r\n              HttpHost = iff ( HttpHost == \"-\", \"\", HttpHost),\r\n              csHost = iff ( csHost == \"-\", \"\", csHost),  //remove empty values\r\n              EventOriginalResultDetails = iff(scSubStatus <> \"0\", strcat (scStatus, \".\", scSubStatus), scStatus)\r\n      | extend \r\n              ipv6_parts = extract_all (@'^\\[(.+)\\](?:\\:(\\d+))?$',csHost)[0],\r\n              ipv4_parts = extract_all (@'^(\\d+\\.\\d+\\.\\d+\\.\\d+)(?:\\:(\\d+))?$',csHost)[0],\r\n              host_parts = extract_all (@'^([^\\\\\\d:]+)(?:\\:(\\d+))?$',csHost)[0]\r\n      | extend         \r\n              DstIpAddr = tostring(coalesce(ipv4_parts[0], ipv6_parts[0])),\r\n              DstPortNumber = toint(coalesce(ipv4_parts[1], ipv6_parts[1], host_parts[1])),\r\n              HttpHost = tostring(coalesce(host_parts[0], HttpHost))\r\n      | project-away ipv4_parts, ipv6_parts, host_parts              \r\n      | extend \r\n              port = strcat (\":\", sPort),\r\n              host = case ( \r\n              HttpHost == \"Default Web Site\", Dst,\r\n              HttpHost <> \"\" and HttpHost <> \"Default Web Site\", HttpHost,\r\n              Dst\r\n             )\r\n       | extend \r\n               Url = strcat (host, port, tempURLconstruct)\r\n      | project-away host, port, tempURLconstruct\r\n      | extend \r\n               ThreatField = case(\r\n                                  ThreatIpAddr <> \"\" and ThreatIpAddr == SrcIpAddr, \"SrcIpAddr\"\r\n                                 ,ThreatIpAddr <> \"\" and ThreatIpAddr == DstIpAddr, \"DstIpAddr\"\r\n                                 ,\"\")\r\n      | project-rename\r\n                      DstHostname = sComputerName\r\n      | project-away \r\n              AdditionalInformation,\r\n              AzureDeploymentID,\r\n              Date,\r\n              Description,\r\n              DvcOs,\r\n              FileOffset,\r\n              FileUri,\r\n              MG, \r\n              ManagementGroupName,\r\n              Role*,\r\n              SourceSystem,\r\n              TLPLevel,\r\n              TenantId,\r\n              TimeTaken,\r\n              Time,\r\n              cs*,\r\n              sPort,\r\n              sc*,\r\n              StorageAccount\r\n    };\r\n    parser  (disabled)\r\n", "params": "disabled:bool = false"}}