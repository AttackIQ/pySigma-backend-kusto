{"_ASim_Dns_NativeV05": {"body": "let parser=(disabled:bool=false) \r\n{\r\n  ASimDnsActivityLogs  | where not(disabled)\r\n    | project-rename\r\n        EventUid = _ItemId,\r\n        DvcScopeId = _SubscriptionId\r\n    | extend\r\n        EventEndTime = TimeGenerated,\r\n        EventStartTime = TimeGenerated,\r\n        Dvc = iff (isempty(Dvc), coalesce (DvcFQDN, DvcHostname, SrcIpAddr, DvcId, _ResourceId), Dvc),\r\n        Dst = coalesce (DstFQDN, DstHostname, DstIpAddr, DstDvcId),\r\n        Src = coalesce (SrcFQDN, SrcHostname, SrcIpAddr, SrcDvcId),\r\n        EventSchema = \"Dns\"\r\n    // -- Type fixes\r\n    | extend\r\n        ThreatConfidence = toint(ThreatConfidence),\r\n        ThreatFirstReportedTime = todatetime(ThreatFirstReportedTime),\r\n        ThreatIsActive = tobool(ThreatIsActive),\r\n        ThreatLastReportedTime = todatetime(ThreatLastReportedTime),\r\n        ThreatOriginalRiskLevel = tostring(ThreatOriginalRiskLevel),\r\n        ThreatRiskLevel = toint(ThreatRiskLevel)    \r\n    //  -- Aliases\r\n    | extend\r\n        DnsResponseCodeName=EventResultDetails,\r\n        Domain=DnsQuery,\r\n        IpAddr=SrcIpAddr,\r\n        Duration = DnsNetworkDuration,\r\n        Process = SrcProcessName,\r\n        SessionId = DnsSessionId,\r\n        User = SrcUsername,\r\n        Hostname = SrcHostname\r\n    | project-away\r\n        TenantId, SourceSystem, _ResourceId\r\n};\r\nparser  (disabled=disabled)", "params": "disabled:bool = false"}}