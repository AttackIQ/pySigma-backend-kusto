{"_ASim_NetworkSession_Microsoft365DefenderV02": {"body": "let M365Defender=(disabled:bool=false){\r\n let DirectionLookup=datatable(ActionType:string,NetworkDirection:string,Outbound:boolean)[\r\n   'ConnectionSuccess','Outbound', true\r\n   ,'ConnectionFailed', 'Outbound', true\r\n   ,'ConnectionRequest','Outbound', true\r\n   ,'InboundConnectionAccepted', 'Inbound', false\r\n   ,'ConnectionFound', 'Unknown', false\r\n   ,'ListeningConnectionCreated', 'Listen', false \r\n ];\r\n // -- Common preprocessing to both input and outbound events\r\n let RawNetworkEvents = (select_outbound:boolean) {\r\n   DeviceNetworkEvents | where not(disabled) \r\n   | lookup DirectionLookup on ActionType\r\n   | where Outbound == select_outbound\r\n   | extend\r\n     // Event\r\n     EventOriginalUid = tostring(ReportId),\r\n     EventCount = int(1),\r\n     EventProduct = 'M365 Defender for Endpoint',\r\n     EventVendor = 'Microsoft',\r\n     EventSchema = 'NetworkSession',\r\n     EventSchemaVersion = '0.1.0',\r\n     EventStartTime = TimeGenerated,\r\n     EventEndTime = TimeGenerated,\r\n     EventType = 'NetworkSession',\r\n     EventResult = iff(ActionType=='ConnectionFailed','Failure','Success'),\r\n     EventSeverity = \"Informational\",\r\n     DvcIdType = 'MDEid'\r\n   | extend\r\n     RemoteUrl = extract (@\"(?:https?://)?(.*)\", 1, RemoteUrl)\r\n   | extend\r\n     User = iff (InitiatingProcessAccountDomain == '', InitiatingProcessAccountName, strcat(InitiatingProcessAccountDomain, '\\\\', InitiatingProcessAccountName)),\r\n     UsernameType = iff(InitiatingProcessAccountDomain == '','Simple', 'Windows'),\r\n     SplitHostname = split(DeviceName,\".\"),\r\n     SplitUrl = split(RemoteUrl,\".\"),\r\n     NetworkProtocol = case (\r\n       Protocol startswith \"Tcp\", \"TCP\",\r\n       Protocol == \"Unknown\", \"\",\r\n       toupper(Protocol)\r\n     )\r\n   | extend  \r\n     DvcHostname = tostring(SplitHostname[0]),\r\n     DvcDomain = tostring(strcat_array(array_slice(SplitHostname, 1, -1), '.')),\r\n     DvcFQDN = iif (DeviceName contains \".\", DeviceName, \"\"),\r\n     UrlHostname = SplitUrl[0],\r\n     UrlDomain = tostring(strcat_array(array_slice(SplitUrl, 1, -1), '.')),\r\n     UrlFQDN = iif(RemoteUrl contains \".\", RemoteUrl, \"\")\r\n   | extend\r\n     DvcDomainType = iif(DvcFQDN != \"\", \"FQDN\", \"\"),\r\n     UrlDomainType = iff(UrlFQDN != \"\", \"FQDN\", \"\"),\r\n     DvcIpAddr = LocalIP\r\n   | extend\r\n     Dvc = DvcHostname  \r\n   | project-rename\r\n     DvcId = DeviceId\r\n   | project-away SplitUrl, SplitHostname\r\n };\r\n let OutboundNetworkEvents = \r\n   RawNetworkEvents (true)\r\n   | project-rename\r\n      DstIpAddr = RemoteIP,\r\n      SrcIpAddr = LocalIP,\r\n      DstPortNumber = RemotePort,\r\n      SrcPortNumber = LocalPort,\r\n      SrcUsernameType = UsernameType,\r\n      SrcUserAadId = InitiatingProcessAccountObjectId,\r\n      SrcUserId = InitiatingProcessAccountSid,\r\n      SrcUserUpn = InitiatingProcessAccountUpn,\r\n      SrcUserDomain = InitiatingProcessAccountDomain\r\n   | extend\r\n      SrcUsername = User,\r\n      SrcDvcId = DvcId,\r\n      SrcDvcIdType = 'MDEid',\r\n      SrcUserIdType = \"SID\",\r\n      DstHostname = UrlHostname\r\n   | project-rename\r\n      DstDomain = UrlDomain,\r\n      DstFQDN = UrlFQDN,\r\n      DstDomainType = UrlDomainType\r\n   | extend  \r\n      SrcHostname = DvcHostname,\r\n      SrcDomain = DvcDomain,\r\n      SrcFQDN = DvcDomain\r\n   // Processes\r\n   | extend\r\n      SrcProcessId = tostring(InitiatingProcessId),\r\n      ParentProcessId = tostring(InitiatingProcessParentId)\r\n   | project-rename\r\n      SrcProcessName = InitiatingProcessFileName,\r\n      SrcProcessCommandLine = InitiatingProcessCommandLine,\r\n      SrcProcessCreationTime = InitiatingProcessCreationTime,\r\n      SrcProcessIntegrityLevel = InitiatingProcessIntegrityLevel,\r\n      SrcProcessTokenElevation = InitiatingProcessTokenElevation,\r\n      ParentProcessName = InitiatingProcessParentFileName,\r\n      ParentProcessCreationTime = InitiatingProcessParentCreationTime\r\n      // SrcProcessFileSize = InitiatingProcessFileSize,\r\n      // SrcProcessCompany = InitiatingProcessVersionInfoCompanyName,\r\n      // SrcProcessFileProduct = InitiatingProcessVersionInfoProductName,\r\n      // SrcProcessFileVersion = InitiatingProcessVersionInfoProductVersion,\r\n      // SrcProcessFileInternalName = InitiatingProcessVersionInfoInternalFileName,\r\n      // SrcProcessFileOriginalName = InitiatingProcessVersionInfoOriginalFileName,\r\n      // SrcProcessFileDescription = InitiatingProcessVersionInfoFileDescription\r\n   | extend\r\n      Process = SrcProcessName,\r\n      ProcessId = SrcProcessId,\r\n      SrcAppName = SrcProcessName,\r\n      SrcAppType = \"Process\"\r\n ;\r\n let InboundNetworkEvents = \r\n   RawNetworkEvents (false)\r\n   | project-rename\r\n      SrcIpAddr = RemoteIP,\r\n      DstIpAddr = LocalIP,\r\n      SrcPortNumber = RemotePort,\r\n      DstPortNumber = LocalPort,\r\n      DstUsernameType = UsernameType,\r\n      DstUserAadId = InitiatingProcessAccountObjectId,\r\n      DstUserId = InitiatingProcessAccountSid,\r\n      DstUserUpn = InitiatingProcessAccountUpn,\r\n      DstUserDomain = InitiatingProcessAccountDomain\r\n   | extend\r\n      DstUsername = User,\r\n      DstDvcId = DvcId,\r\n      DstDvcIdType = 'MDEid',\r\n      DstUserIdType = 'SID',\r\n      SrcHostname = UrlHostname\r\n  | project-rename\r\n      SrcDomain = UrlDomain,\r\n      SrcFQDN = UrlFQDN,\r\n      SrcDomainType = UrlDomainType,\r\n      DstHostname = DvcHostname,\r\n      DstDomain = DvcDomain,\r\n      DstFQDN = DvcFQDN\r\n   // Processes\r\n   | extend\r\n      DstProcessId = tostring(InitiatingProcessId),\r\n      ParentProcessId = tostring(InitiatingProcessParentId)\r\n   | project-rename\r\n      DstProcessName = InitiatingProcessFileName,\r\n      DstProcessCommandLine = InitiatingProcessCommandLine,\r\n      DstProcessCreationTime = InitiatingProcessCreationTime,\r\n      DstProcessIntegrityLevel = InitiatingProcessIntegrityLevel,\r\n      DstProcessTokenElevation = InitiatingProcessTokenElevation,\r\n      ParentProcessName = InitiatingProcessParentFileName,\r\n      ParentProcessCreationTime = InitiatingProcessParentCreationTime\r\n      // SrcProcessFileSize = InitiatingProcessFileSize,\r\n      // SrcProcessCompany = InitiatingProcessVersionInfoCompanyName,\r\n      // SrcProcessFileProduct = InitiatingProcessVersionInfoProductName,\r\n      // SrcProcessFileVersion = InitiatingProcessVersionInfoProductVersion,\r\n      // SrcProcessFileInternalName = InitiatingProcessVersionInfoInternalFileName,\r\n      // SrcProcessFileOriginalName = InitiatingProcessVersionInfoOriginalFileName,\r\n      // SrcProcessFileDescription = InitiatingProcessVersionInfoFileDescription\r\n   | extend\r\n      Process = DstProcessName,\r\n      ProcessId = DstProcessId,\r\n      DstAppName = DstProcessName,\r\n      DstAppType = \"Process\"\r\n ;\r\n union InboundNetworkEvents, OutboundNetworkEvents\r\n | extend // aliases\r\n    Hostname = UrlHostname,\r\n    IpAddr = SrcIpAddr,\r\n    Src = SrcIpAddr,\r\n    Dst = DstIpAddr\r\n };\r\n M365Defender(disabled)\r\n", "params": "disabled:bool = false"}}