{"_ASim_NetworkSession_NativeV03": {"body": "let parser=(disabled:bool=false) \r\n{\r\n  ASimNetworkSessionLogs  | where not(disabled)\r\n    | project-rename\r\n        EventUid = _ItemId\r\n    | extend          \r\n        EventSchema = \"NetworkSession\",\r\n        DvcScopeId = iff(isempty(DvcSubscriptionId), _SubscriptionId, DvcSubscriptionId)\r\n    //  -- Aliases\r\n    | extend\r\n        EventEndTime = iff (isnull(EventEndTime), TimeGenerated, EventEndTime),\r\n        EventStartTime = iff (isnull(EventEndTime), TimeGenerated, EventStartTime),\r\n        Dvc = case(EventType == 'L2NetworkSession',\r\n              coalesce (DvcFQDN, DvcHostname, DvcId, _ResourceId, strcat (EventVendor,'/', EventProduct)),\r\n              coalesce (DvcFQDN, DvcHostname, DvcIpAddr, DvcId, _ResourceId, strcat (EventVendor,'/', EventProduct))\r\n        ),\r\n        Dst = coalesce (DstFQDN, DstHostname, DstIpAddr, DstDvcId),\r\n        Src = coalesce (SrcFQDN, SrcHostname, SrcIpAddr, SrcDvcId),\r\n        DvcInterface = iff(isempty(DvcInterface), coalesce(DvcInboundInterface, DvcOutboundInterface), DvcInterface),\r\n        Hostname = iff  (EventType == \"EndpointNetworkSession\" and NetworkDirection == (\"Inbound\"), SrcHostname, DstHostname),\r\n        IpAddr = iff  (EventType == \"EndpointNetworkSession\" and NetworkDirection == (\"Inbound\"), DstIpAddr, SrcIpAddr),\r\n        Rule = coalesce(NetworkRuleName, tostring(NetworkRuleNumber)),\r\n        Duration = NetworkDuration,\r\n        SessionId = NetworkSessionId,\r\n        User = DstUsername,\r\n        InnerVlanId = SrcVlanId,\r\n        OuterVlanId = DstVlanId\r\n    | project-away\r\n        TenantId, SourceSystem, DvcSubscriptionId, _SubscriptionId, _ResourceId\r\n  };\r\nparser (disabled=disabled)\r\n", "params": "disabled:bool = false"}}